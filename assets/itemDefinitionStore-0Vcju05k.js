import{O as s,L as t}from"./index-B7yYOxnO.js";const o=s("itemDefinition",{state:()=>({itemDefinitions:[],loading:!1,error:null}),actions:{async fetchItemDefinitions(){this.loading=!0,this.error=null;try{const i=await t.get("/itemDefinitions");this.itemDefinitions=i.data}catch(i){this.error="Failed to fetch item definitions: "+(i.response?.data?.message||i.message),console.error(i)}finally{this.loading=!1}},async addItemDefinition(i){this.loading=!0,this.error=null;try{const e=await t.post("/itemDefinitions",i);this.itemDefinitions.unshift(e.data)}catch(e){throw this.error="Failed to add item definition: "+(e.response?.data?.message||e.message),console.error(e),e}finally{this.loading=!1}},async updateItemDefinition(i){this.loading=!0,this.error=null;try{await t.put(`/itemDefinitions/${i.id}`,i),await this.fetchItemDefinitions()}catch(e){throw this.error="Failed to update item definition: "+(e.response?.data?.message||e.message),console.error(e),e}finally{this.loading=!1}},async deleteItemDefinition(i){this.loading=!0,this.error=null;try{await t.delete(`/itemDefinitions/${i}`),this.itemDefinitions=this.itemDefinitions.filter(e=>e.id!==i)}catch(e){throw this.error="Failed to delete item definition: "+(e.response?.data?.message||e.message),console.error(e),e}finally{this.loading=!1}}}});export{o as u};
